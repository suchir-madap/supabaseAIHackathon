var m=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var c=(e,r)=>{for(var t in r)m(e,t,{get:r[t],enumerable:!0})},h=(e,r,t,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of u(r))!g.call(e,n)&&n!==t&&m(e,n,{get:()=>r[n],enumerable:!(o=p(r,n))||o.enumerable});return e};var C=e=>h(m({},"__esModule",{value:!0}),e);var b={};c(b,{default:()=>x});module.exports=C(b);var f=require("@parcel/plugin");var a=require("stream"),i=require("string_decoder"),s=class extends a.Transform{decoder=new i.StringDecoder("utf8");_transform(r,t,o){o(null,this.transformChunk(this.decoder.write(r)))}_flush(r){let t=this.decoder.end();t?r(null,this.transformChunk(t)):r()}transformChunk(r,t=1024){let o="";for(let n=0;n<r.length;n+=t){let l=Math.min(n+t,r.length),d=r.substring(n,l);o+=this.transformSegment(d)}return o}transformSegment(r){return Array.from(r).map(t=>t.charCodeAt(0)<=127?t:"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)).join("")}};var x=new f.Compressor({async compress({stream:e}){return{stream:e.pipe(new s)}}});
